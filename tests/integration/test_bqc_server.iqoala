META_START
    name: server
    parameters: client_id
    csockets: 0 -> client
    epr_sockets: 0 -> client
META_END

^b0 {type = host}:
    csocket = assign_cval() : 0

^b1 {type = LR}:
    run_subroutine(vec<>) : create_epr_0
^b2 {type = LR}:
    run_subroutine(vec<>) : create_epr_1
^b3 {type = LR}:
    run_subroutine(vec<>) : local_cphase

^b4 {type = host}:
    delta1 = recv_cmsg(csocket)

^b5 {type = LR}:
    vec<m1> = run_subroutine(vec<delta1>) : meas_qubit_1

^b6 {type = host}:
    send_cmsg(csocket, m1)
    delta2 = recv_cmsg(csocket)

^b7 {type = LR}:
    vec<m2> = run_subroutine(vec<delta2>) : meas_qubit_0

^b8 {type = host}:
    return_result(m1)
    return_result(m2)


SUBROUTINE create_epr_0
    params: 
    returns:
    uses: 1
    keeps: 1
    request: req0
  NETQASM_START
    array 10 @0
    recv_epr C15 C0 C1 C0
    wait_all @0[0:10]
  NETQASM_END

SUBROUTINE create_epr_1
    params: 
    returns:
    uses: 0
    keeps: 0
    request: req1
  NETQASM_START
    array 10 @1
    recv_epr C15 C0 C3 C2
    wait_all @1[0:10]
  NETQASM_END

SUBROUTINE local_cphase
    params: 
    returns: 
    uses: 0, 1
    keeps: 0, 1
    request: 
  NETQASM_START
    set Q0 1
    set Q1 0
    cphase Q0 Q1
  NETQASM_END

SUBROUTINE meas_qubit_1
    params: delta1
    returns: M0 -> m1
    uses: 0, 1
    keeps: 1
    request: 
  NETQASM_START
    set Q1 1
    rot_z Q1 {delta1} 4
    h Q1
    meas Q1 M0
    qfree Q1
  NETQASM_END

SUBROUTINE meas_qubit_0
    params: delta2
    returns: M0 -> m2
    uses: 0, 1
    keeps:
    request: 
  NETQASM_START
    set Q0 0
    rot_z Q0 {delta2} 4
    h Q0
    meas Q0 M0
    qfree Q0
  NETQASM_END

REQUEST req0
  callback_type: wait_all
  callback: 
  remote_id: {client_id}
  epr_socket_id: 0
  num_pairs: 1
  virt_ids: all 0
  timeout: 1000
  fidelity: 1.0
  typ: create_keep
  role: receive
  result_array_addr: 0

REQUEST req1
  callback_type: wait_all
  callback: 
  remote_id: {client_id}
  epr_socket_id: 0
  num_pairs: 1
  virt_ids: all 1
  timeout: 1000
  fidelity: 1.0
  typ: create_keep
  role: receive
  result_array_addr: 1