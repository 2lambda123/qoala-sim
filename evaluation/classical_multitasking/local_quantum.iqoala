META_START
    name: bob
    parameters: duration
    csockets: 
    epr_sockets: 
META_END

^b0 {type = CL}:
    csocket = assign_cval() : 0
    ack = assign_cval() : 42

^b1 {type = QL, deadlines = [b0: 1]}:
    tuple<> = run_subroutine(tuple<>) : prepare

^b3 {type = CL, deadlines = [b0: 1]}:
    busy() : duration

^b4 {type = QL, deadlines = [b0: 1]}:
    tuple<> = run_subroutine(tuple<>) : rotate

^b5 {type = CL, deadlines = [b0: 1]}:
    busy() : duration

^b7 {type = QL, deadlines = [b0: 1]}:
    tuple<> = run_subroutine(tuple<>) : rotate

^b5 {type = CL, deadlines = [b0: 1]}:
    busy() : duration

^b9 {type = QL, deadlines = [b0: 1]}:
    tuple<outcome> = run_subroutine(tuple<>) : measure_z

^b10 {type = CL, deadlines = [b0: 1]}:
    return_result(outcome)

SUBROUTINE prepare
    params:
    returns:
    uses: 0
    keeps: 0
    request: 
  NETQASM_START
    set Q0 0
    init Q0

    // hadamard
    rot_y Q0 8 4
    rot_x Q0 16 4
  NETQASM_END

SUBROUTINE rotate
    params: 
    returns:
    uses: 0
    keeps: 0
    request: 
  NETQASM_START
    set Q0 0

    // NOTE don't use angle for now
    rot_y Q0 4 4
  NETQASM_END

SUBROUTINE measure_z
    params:
    returns: m
    uses: 0
    keeps:
    request: 
  NETQASM_START
    set Q0 0
    meas Q0 M0
    store M0 @output[0]
  NETQASM_END